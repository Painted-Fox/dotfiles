set nocompatible

" Let vim know we're using utf-8 for this script.
scriptencoding utf-8

" Map the <leader> to the space-bar.
" Should be set before plugins are initialized.
let mapleader = "\<Space>"


" Plug -----------------------------------------------------------------------
call plug#begin()

" Defaults everyone can agree on
Plug 'tpope/vim-sensible'
" Surround text with parentheses, brackets, quotes, XML tags, and more
Plug 'tpope/vim-surround'
" lean & mean status/tabline for vim that's light as air
Plug 'bling/vim-airline'
" Distraction-free writing in Vim
Plug 'junegunn/goyo.vim'
" Rethinking Vim as a tool for writing
Plug 'reedes/vim-pencil'
" Simple tmux statusline generator
Plug 'edkolev/tmuxline.vim'
" A dark color scheme for Vim & gVim
Plug 'w0ng/vim-hybrid'


call plug#end()


" Airline --------------------------------------------------------------------
let g:airline_powerline_fonts = 1
let g:airline_theme = 'hybridline'
" Disable airline-tmuxline so it doesn't overwrite the theme.
let g:airline#extensions#tmuxline#enabled = 0


" Goyo -----------------------------------------------------------------------
let g:goyo_width = 80 " Set goyo's width


" Pencil ---------------------------------------------------------------------
let g:pencil#textwidth = 80             " Set pencil's width
let g:pencil#wrapModeDefault = 'soft'   " Use soft wrap
let g:pencil#joinspaces = 1             " Use two spaces after a period
augroup pencil
    autocmd!
    autocmd FileType markdown call pencil#init()
augroup END


" Hybrid Colorscheme ---------------------------------------------------------
let g:hybrid_use_Xresources = 1
if !empty("~/.vim/plugged/vim-hybrid")
    set background=dark
    colorscheme hybrid
endif


" Turn Off Swap Files --------------------------------------------------------
set noswapfile
set nobackup
set nowb


" Persistent Undo ------------------------------------------------------------
" Keep undo history across sessions, by storing in file.
if has('persistent_undo')
  silent !mkdir ~/.vim/tmp > /dev/null 2>&1
  set undodir=~/.vim/tmp
  set undofile
endif


" Indentation ----------------------------------------------------------------
set smartindent
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab

filetype plugin on
filetype indent on

set nowrap      "Don't wrap lines
set linebreak   "Wrap lines at convenient points

set list listchars=tab:→\ ,trail:·,extends:…,precedes:…


" Folds ----------------------------------------------------------------------
set nofoldenable        "don't fold by default


" General Configuration ------------------------------------------------------
set visualbell  "Don't sound the bell


" GUI Configuration ----------------------------------------------------------
function! s:AdjustFontSize()
    " This function helps checks if we have a small screen by checking if the
    " column size is smaller than expected.  If the screen is small, decrease
    " the font by 2.
    if &columns < 190
        let l:fsize = substitute(&guifont, '^.*:h\([^:,]*\).*$', '\1', '')
        let l:fsize -= 2
        let l:guifont = substitute(&guifont, ':h\([^:,]*\)', ':h' . l:fsize, 'g')
        let &guifont = l:guifont
    endif
endfunction

if has('gui_running')
    set guioptions-=r " Remove right-hand scroll bar
    set guioptions-=L " Remove left-hand scroll bar

    set guioptions-=T " Remove the toolbar
    set guioptions-=m " Remove the menu bar

    set lines=60      " Set height in lines
    set columns=190   " Set width in columns
    if has('gui_win32')
        set guifont=Hack:h14:cANSI
    else
        set guifont=Hack\ 14
    endif

    " Automatically adjust the font size.  This is called later so we can use
    " the value of `columns` to detect screen size.
    autocmd VimEnter * call s:AdjustFontSize()
endif


" Mappings -------------------------------------------------------------------
inoremap jk <ESC>
" Fix spelling with <leader>f
nnoremap <leader>f 1z=
" Toggle spelling visuals with <leader>s
nnoremap <leader>s :set spell!<CR>
" Toggle distraction-free mode
nnoremap <leader>w :Goyo<CR>
